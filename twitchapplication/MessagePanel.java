package twitchapplication;

import java.awt.Color;
import java.awt.Font;
import java.awt.FontMetrics;
import java.awt.Graphics;

public class MessagePanel extends javax.swing.JPanel {

    private TwitchController twc;
    // Define icons
    public final javax.swing.ImageIcon errorIcon = new javax.swing.ImageIcon(getClass().getResource("/res/error.png"));
    public final javax.swing.ImageIcon infoIcon = new javax.swing.ImageIcon(getClass().getResource("/res/info.png"));
    public final javax.swing.ImageIcon warningIcon = new javax.swing.ImageIcon(getClass().getResource("/res/warning.png"));

    private int transparencyLevel = 255;
    private String messageText = "";
    
    /**
     * Creates new form MessagePanel
     */
    public MessagePanel(TwitchController twc) {
        this.twc = twc;
        initComponents();
    }
    
    
    private Font textFont = new java.awt.Font("Tahoma", 0, 11);
    
    @Override
    public void paintComponent(Graphics g) {
        super.paintComponent(g);
        Color textColor = new Color(0,0,0, transparencyLevel);
        FontMetrics metrics = g.getFontMetrics(textFont);
         int lineWidth1 = metrics.stringWidth("Transparency");
         int textHeight = metrics.getHeight() + metrics.getAscent();
         int topSkip = textHeight / 2;
         int leftSkip1 = lineWidth1 / 2;
         g.setColor(textColor);
         g.setFont(textFont);
         g.drawString(messageText, leftSkip1, topSkip + metrics.getAscent());
    }

    public void showMessage(MessageState state, String message) {
        this.messageText = message;
        switch (state) {
            case ERROR:
                messageLabel.setIcon(errorIcon);
                break;
            case INFO:
                messageLabel.setIcon(infoIcon);
                break;
            case WARNING:
                messageLabel.setIcon(warningIcon);
                break;
            case BLANK:
            default:
                messageLabel.setIcon(null);
                break;
        }
        messageLabel.setVisible(true);
    }
    
    public void setMessageParameters(int level) {
        this.transparencyLevel = level;
        this.repaint();
    }

    public void setMessageVisibility(boolean visible) {
        messageLabel.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        messageLabel = new javax.swing.JLabel();

        messageLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/error.png"))); // NOI18N
        messageLabel.setText("    ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(messageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(36, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(messageLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel messageLabel;
    // End of variables declaration//GEN-END:variables
}
